!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);const r=["/client/10147e44d0001b9478c16d5d00b270d3.png","/client/368f95dd26cfb58f57f9/index.0.js","/client/368f95dd26cfb58f57f9/information.1.js","/client/368f95dd26cfb58f57f9/main.js","/client/368f95dd26cfb58f57f9/ticket.3.js"].concat(["/service-worker-index.html","/avatar.png","/favicon.png","/global.css","/logo-192.png","/logo-512.png","/manifest.json"]),o=new Set(r);self.addEventListener("install",e=>{e.waitUntil(caches.open("cache1605297290328").then(e=>e.addAll(r)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const t of e)"cache1605297290328"!==t&&await caches.delete(t);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const t=new URL(e.request.url),n=t.protocol.startsWith("http"),r=t.hostname===self.location.hostname&&t.port!==self.location.port,c=t.host===self.location.host&&o.has(t.pathname),a="only-if-cached"===e.request.cache&&!c;!n||r||a||e.respondWith((async()=>c&&await caches.match(e.request)||async function(e){const t=await caches.open("offline1605297290328");try{const n=await fetch(e);return t.put(e,n.clone()),n}catch(n){const r=await t.match(e);if(r)return r;throw n}}(e.request))())})}]);